
import Head from 'next/head'
import AddGameForm from '../components/forms/AddGameForm'
import { useEffect, useState } from 'react';
import Modal from "@material-ui/core/Modal";
import Backdrop from "@material-ui/core/Backdrop";
import Fade from "@material-ui/core/Fade";
import Navbar from '../components/Navbar'
import BaseLayout from '../layout/BaseLayout';
import Link from 'next/link'
import { Container, ContainerGames, TitlePage,AddGameButton } from '../styles/IndexPageStyles';
import { useStyles } from '../styles/ModalSyles';
import { Title } from '../components/UserCardStyle';

import { useGetGames, useCreateGame, useLazyGetUser } from '../apollo/actions';
import withApollo from '../hoc/withApollo';

const AppLink = ({ children, href, as }) => (
  <Link href={href} as={as}>
    <a>{children}</a>
  </Link>
);

 function Home() {
   const [createGame,{error}]=useCreateGame()
  const {data:gameData}=useGetGames()
 const  games=(gameData && gameData.games) || []
   const classes = useStyles();
  const [open,setOpen]=useState(false)
  const [user, setUser] = useState();
  const [getUser, { data:dataU, error:errorU }] = useLazyGetUser();
   const handleOpen = () => {
     console.log("uslo je");
     setOpen(true);
   };

   const handleClose = () => {
     setOpen(false);
   };
   const handleCreateGame=async(inputData)=>{
     await createGame({variables:inputData})
     handleClose()
   }
   useEffect(() => {
     getUser();
   }, []);
   if (dataU) {
     if (dataU.user && !user) {
       setUser(dataU.user);
     }
     if (!dataU.user && user) {
       setUser(null);
     }
   }
  return (
    <BaseLayout page='Home'>
      <Head>
        <title>Index Page-game row</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container>
       {user && <AddGameButton onClick={handleOpen}>Add Game +</AddGameButton>}
        <TitlePage>Welcome to Live Score Dasboard</TitlePage>
       {games.map((game)=>{
         return (
           <AppLink href='/[id]' as={`/${game._id}`}>
             <ContainerGames key={game._id}>
               {game.home_team}---{game.away_team}
             </ContainerGames>
           </AppLink>
         );
       })}
      </Container>
      <Modal
        aria-labelledby="transition-modal-title"
        aria-describedby="transition-modal-description"
        className={classes.modal}
        open={open}
        onClose={handleClose}
        closeAfterTransition
        BackdropComponent={Backdrop}
        BackdropProps={{
          timeout: 500,
        }}
      >
        <Fade in={open}>
          <div className={classes.paper}>
            <Title>Add Game Form</Title>
            <AddGameForm onSubmit={handleCreateGame} />

          </div>
        </Fade>
      </Modal>
    </BaseLayout>
  );
}

export default withApollo(Home)
